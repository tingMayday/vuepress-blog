(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{477:function(e,t,a){"use strict";a.r(t);var s=a(1),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("项目地址："),a("a",{attrs:{href:"https://github.com/tingMayday/vue-admin-master",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue-admin-master"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"需要用到"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需要用到"}},[e._v("#")]),e._v(" 需要用到")]),e._v(" "),a("ol",[a("li",[e._v("前端： vue-cli + webpack + element UI")]),e._v(" "),a("li",[e._v("后台：nodejs + express")]),e._v(" "),a("li",[e._v("数据库： mysql 客户端 navicat")])]),e._v(" "),a("h2",{attrs:{id:"前端项目构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端项目构建"}},[e._v("#")]),e._v(" 前端项目构建")]),e._v(" "),a("h4",{attrs:{id:"_1、首先下载node-js安装并且配置好环境变量。（地址：node-js）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、首先下载node-js安装并且配置好环境变量。（地址：node-js）"}},[e._v("#")]),e._v(" 1、首先下载node.js安装并且配置好环境变量。（地址："),a("a",{attrs:{href:"https://github.com/pandao/editor.md",title:"Editor.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("node.js"),a("OutboundLink")],1),e._v("）")]),e._v(" "),a("p",[e._v("npm是随同NodeJS一起安装的包管理工具，打开cmd 命令窗口输入  node -v   （然后输入npm -v）查看, 如图所示，可以查看到版本号，则表示已安装")]),e._v(" "),a("p",[a("img",{attrs:{src:"/blog/6-1.png",alt:"node",title:"node"}}),e._v(" "),a("img",{attrs:{src:"/blog/6-2.png",alt:"npm",title:"npm"}})]),e._v(" "),a("h4",{attrs:{id:"_2、安装vue-cli并利用vue-cli构建项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、安装vue-cli并利用vue-cli构建项目"}},[e._v("#")]),e._v(" 2、安装vue-cli并利用vue-cli构建项目")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install vue-cli -g\nvue init vue-admin-master\n")])])]),a("p",[a("img",{attrs:{src:"/blog/6-3.png",alt:"vue-cli",title:"vue-cli"}})]),e._v(" "),a("h4",{attrs:{id:"_3、安装axios-用于接口对接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、安装axios-用于接口对接"}},[e._v("#")]),e._v(" 3、安装axios(用于接口对接)")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install axios --save\nnpm install vue-axios --save\n")])])]),a("h4",{attrs:{id:"_4、安装element-ui组件库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、安装element-ui组件库"}},[e._v("#")]),e._v(" 4、安装element-ui组件库")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install element-ui --save\n")])])]),a("h4",{attrs:{id:"_5、修改main-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、修改main-js"}},[e._v("#")]),e._v(" 5、修改main.js")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("import Vue from 'vue'\nimport App from './App'\nimport router from './router'\nimport axios from 'axios'\nimport VueAxios from 'vue-axios'\nimport ElementUI from \"element-ui\";\nimport \"element-ui/lib/theme-chalk/index.css\";\n\n\nVue.prototype.$axios = axios\nVue.use(VueAxios, axios);\nVue.use(ElementUI);\n\nVue.config.productionTip = false\n\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n")])])]),a("h4",{attrs:{id:"_6、此时执行命令-npm-start-或者-npm-run-dev"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、此时执行命令-npm-start-或者-npm-run-dev"}},[e._v("#")]),e._v(" 6、此时执行命令 "),a("code",[e._v("npm start")]),e._v(" 或者 "),a("code",[e._v("npm run dev")])]),e._v(" "),a("p",[a("img",{attrs:{src:"/blog/6-4.png",alt:"npm start",title:"npm start"}})]),e._v(" "),a("p",[e._v("本地访问 http://localhost:8081 可以看到")]),e._v(" "),a("p",[a("img",{attrs:{src:"/blog/6-5.png",alt:"http://localhost:8081",title:"http://localhost:8081"}})]),e._v(" "),a("p",[e._v("前端框架搭建完成")]),e._v(" "),a("h2",{attrs:{id:"搭建后端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#搭建后端"}},[e._v("#")]),e._v(" 搭建后端")]),e._v(" "),a("h4",{attrs:{id:"_1、安装express"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、安装express"}},[e._v("#")]),e._v(" 1、安装express")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install express -s\n")])])]),a("p",[a("img",{attrs:{src:"/blog/6-6.png",alt:"express",title:"express"}})]),e._v(" "),a("h4",{attrs:{id:"_2、用express创建一个后端服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、用express创建一个后端服务器"}},[e._v("#")]),e._v(" 2、用express创建一个后端服务器")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("express server\n")])])]),a("p",[a("img",{attrs:{src:"/blog/6-7.png",alt:"express server",title:"express server"}})]),e._v(" "),a("h4",{attrs:{id:"_3、根据提示执行指令-运行服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、根据提示执行指令-运行服务器"}},[e._v("#")]),e._v(" 3、根据提示执行指令,运行服务器")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cd server\nnpm install\nnpm start\n")])])]),a("p",[a("img",{attrs:{src:"/blog/6-8.png",alt:"server",title:"server"}})]),e._v(" "),a("p",[e._v("打开http://localhost:3000/可以看到服务器已开启")]),e._v(" "),a("p",[a("img",{attrs:{src:"/blog/6-9.png",alt:"http://localhost:3000",title:"http://localhost:3000"}})]),e._v(" "),a("p",[e._v("此时可以看到项目下面新增了一个server目录，在这里主要做一些数据库和接口的逻辑操作")]),e._v(" "),a("p",[a("img",{attrs:{src:"/blog/6-10.png",alt:"server目录",title:"server目录"}})]),e._v(" "),a("p",[e._v("至此，您已经成功安装一个服务器，接下来实现数据库的创建")]),e._v(" "),a("h2",{attrs:{id:"数据库的配置与连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库的配置与连接"}},[e._v("#")]),e._v(" 数据库的配置与连接")]),e._v(" "),a("h4",{attrs:{id:"_1、安装mysql依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、安装mysql依赖"}},[e._v("#")]),e._v(" 1、安装mysql依赖")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install mysql --save\n")])])]),a("h4",{attrs:{id:"_2、安装完成之后，打开项目下面的server文件夹，新建一个config配置文件夹，在里面创建一个db-js文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、安装完成之后，打开项目下面的server文件夹，新建一个config配置文件夹，在里面创建一个db-js文件"}},[e._v("#")]),e._v(" 2、安装完成之后，打开项目下面的server文件夹，新建一个config配置文件夹，在里面创建一个db.js文件")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var mysql = require('mysql')\n// 创建数据库链接,并暴露为connection\nmodule.exports = connection = mysql.createConnection({\n    host: 'localhost',\n    user: 'root',               //数据库用户名\n    password: '123456',         //数据库密码\n    database: 'vue_admin',      //数据库名称\n    port: '3306'                //端口号\n})\n\nconnection.connect((err) => {\n    if(err) {\n        console.log('---' + err)\n        return;\n    }\n    console.log('---------数据库登录成功---------')\n})\n")])])]),a("h4",{attrs:{id:"_3、然后打开server文件夹下面的app-js，修改内容为"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、然后打开server文件夹下面的app-js，修改内容为"}},[e._v("#")]),e._v(" 3、然后打开server文件夹下面的app.js，修改内容为")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const express = require('express');\nconst app = express();\nconst mysql = require('mysql');\n\n//后续接口使用post请求，所以使用express的中间件body-parser来解析数据(需用npm安装)\nconst bodyParser = require('body-parser');\nconst db = require('./config/db.js');       // 引用配置文件db.js连接数据库\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\napp.all('*', (req, res, next) => {\n  //设置允许跨域的域名，*代表允许任意域名跨域\n  res.header('Access-Control-Allow-Origin', '*');\n  //允许的header类型\n  res.header('Access-Control-Allow-Headers', 'content-type');\n  //跨域允许的请求方式\n  res.header('Access-Control-Allow-Methods', 'DELETE,PUT,POST,GET,OPTIONS');\n  if (req.method.toLowerCase() === 'options') {\n    res.send(200)\n  } else {\n    next()\n  }\n})\n\n// 查询管理员列表\napp.get('/admin', (req, res) => {\n  db.query('SELECT * FROM admin', null, (err, result) => {\n    if (err) {\n      console.log(err)\n      return;\n    }\n    res.send({\n      msg: '获取admin列表',\n      code: 200,\n      data: result\n    })\n  })\n})\n\nvar server = app.listen(3000, () => {\n  console.log('server isRunning........')\n})\n")])])]),a("h4",{attrs:{id:"_4、下载安装navicat数据库管理工具，安装完成后启动navicat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、下载安装navicat数据库管理工具，安装完成后启动navicat"}},[e._v("#")]),e._v(" 4、下载安装"),a("a",{attrs:{href:"http://www.navicat.com.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Navicat"),a("OutboundLink")],1),e._v("数据库管理工具，安装完成后启动Navicat")]),e._v(" "),a("p",[e._v("点击左上角导航栏的连接选项，选择MySQL，弹出新建连接弹框，填好相关信息后点击确定即可")]),e._v(" "),a("p",[a("img",{attrs:{src:"/blog/6-11.png",alt:"Navicat",title:"Navicat"}}),e._v(" "),a("img",{attrs:{src:"/blog/6-12.png",alt:"Navicat连接",title:"Navicat连接"}})]),e._v(" "),a("h4",{attrs:{id:"_5、双击打开刚才新建的连接，可以查看到当前连接的所有mysql数据库，右击当前连接，选择新建数据库，弹出新建数据库弹框，创建数据库vue-admin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、双击打开刚才新建的连接，可以查看到当前连接的所有mysql数据库，右击当前连接，选择新建数据库，弹出新建数据库弹框，创建数据库vue-admin"}},[e._v("#")]),e._v(" 5、双击打开刚才新建的连接，可以查看到当前连接的所有MySQL数据库，右击当前连接，选择新建数据库，弹出新建数据库弹框，创建数据库vue_admin")]),e._v(" "),a("p",[a("img",{attrs:{src:"/blog/6-13.png",alt:"新建数据库",title:"新建数据库"}}),e._v(" "),a("img",{attrs:{src:"/blog/6-14.png",alt:"新建数据库",title:"新建数据库"}})]),e._v(" "),a("h4",{attrs:{id:"_6、在数据库vue-admin创建admin表，新建相关字段，并添加一些内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、在数据库vue-admin创建admin表，新建相关字段，并添加一些内容"}},[e._v("#")]),e._v(" 6、在数据库vue_admin创建admin表，新建相关字段，并添加一些内容")]),e._v(" "),a("p",[a("img",{attrs:{src:"/blog/6-15.png",alt:"新建admin表",title:"新建admin表"}}),e._v(" "),a("img",{attrs:{src:"/blog/6-16.png",alt:"新建admin表",title:"新建admin表"}}),e._v(" "),a("img",{attrs:{src:"/blog/6-17.png",alt:"新建admin表",title:"新建admin表"}})]),e._v(" "),a("h4",{attrs:{id:"_7、数据库和表都准备好后，打开cmd，进入到项目下面server文件夹，运行node-app-js。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、数据库和表都准备好后，打开cmd，进入到项目下面server文件夹，运行node-app-js。"}},[e._v("#")]),e._v(" 7、数据库和表都准备好后，打开cmd，进入到项目下面server文件夹，运行"),a("code",[e._v("node app.js")]),e._v("。")]),e._v(" "),a("p",[e._v("看到如下显示，说明数据库连接成功了")]),e._v(" "),a("p",[a("img",{attrs:{src:"/blog/6-18.png",alt:"数据库连接测试",title:"数据库连接测试"}})]),e._v(" "),a("p",[e._v("现在试着访问admin接口，前面在server的app.js文件写了一个查询管理员列表的接口,可以直接打开"),a("a",{attrs:{href:"http://localhost:3000/admin",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://localhost:3000/admin"),a("OutboundLink")],1),e._v("去访问接口和查看返回的数据，结果如下")]),e._v(" "),a("p",[a("img",{attrs:{src:"/blog/6-19.png",alt:"查看接口返回",title:"查看接口返回"}})]),e._v(" "),a("p",[e._v("这样前端页面就可以通过调用接口访问到数据了。")]),e._v(" "),a("p",[e._v("例如：修改HelloWorld.vue文件")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<template>\n  <div class="hello">\n    <h2>管理员列表</h2>\n    \x3c!-- 这里使用的是element-ui的Table表格组件 --\x3e\n    <el-table :data="admin" style="width: 100%">\n      <el-table-column type="index"></el-table-column>\n      <el-table-column prop="id" label="ID"></el-table-column>\n      <el-table-column prop="name" label="姓名"></el-table-column>\n      <el-table-column prop="password" label="密码"></el-table-column>\n      <el-table-column prop="age" label="年龄"></el-table-column>\n      <el-table-column prop="sex" label="性别"></el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: "HelloWorld",\n  data() {\n    return {\n      admin: [],\n    };\n  },\n\n  mounted() {\n    this.getAdmin();\n  },\n\n  methods: {\n    getAdmin() {\n      this.$axios({\n        methods: "get",\n        url: "http://localhost:3000/admin",\n      })\n        .then((res) => {\n          this.admin = res.data.data;\n        })\n        .catch((err) => {\n          this.$message.error(err.msg);\n        });\n    },\n  },\n};\n<\/script>\n')])])]),a("p",[e._v("页面显示的最终效果")]),e._v(" "),a("p",[a("img",{attrs:{src:"/blog/6-20.png",alt:"接口测试",title:"接口测试"}})]),e._v(" "),a("blockquote",[a("p",[e._v("至此，整个项目的框架就已经完成的了，后面就是对项目进行完善")])]),e._v(" "),a("h2",{attrs:{id:"登录注册功能实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#登录注册功能实现"}},[e._v("#")]),e._v(" 登录注册功能实现")])])}),[],!1,null,null,null);t.default=r.exports}}]);